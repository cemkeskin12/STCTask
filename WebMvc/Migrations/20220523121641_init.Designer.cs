// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebMvc.Context;

#nullable disable

namespace WebMvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220523121641_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebMvc.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebMvc.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("WebMvc.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("WebMvc.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobId");

                    b.HasIndex("SectionId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("WebMvc.Entities.Job", b =>
                {
                    b.HasOne("WebMvc.Entities.Section", "Section")
                        .WithMany("Jobs")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("WebMvc.Entities.Section", b =>
                {
                    b.HasOne("WebMvc.Entities.Department", "Department")
                        .WithMany("Sections")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebMvc.Entities.Worker", b =>
                {
                    b.HasOne("WebMvc.Entities.Department", "Department")
                        .WithMany("Worker")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("WebMvc.Entities.Job", "Job")
                        .WithMany("Worker")
                        .HasForeignKey("JobId");

                    b.HasOne("WebMvc.Entities.Section", "Section")
                        .WithMany("Worker")
                        .HasForeignKey("SectionId");

                    b.Navigation("Department");

                    b.Navigation("Job");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("WebMvc.Entities.Department", b =>
                {
                    b.Navigation("Sections");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("WebMvc.Entities.Job", b =>
                {
                    b.Navigation("Worker");
                });

            modelBuilder.Entity("WebMvc.Entities.Section", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Worker");
                });
#pragma warning restore 612, 618
        }
    }
}
